[
  {
    "objectID": "HW5.html",
    "href": "HW5.html",
    "title": "HW5",
    "section": "",
    "text": "Reading in data using the provided R code with modifications\n\nd1=read.table(\"student/student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student/student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\n\n\n\nUsing functions from the tidyverse to repeat step 1 with tidyverse functions\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata1 = read.csv2(\"student/student-mat.csv\", header = TRUE)\ndata2 = read.csv2(\"student/student-por.csv\", header = TRUE)\n# turning data1 and data2 into tibbles\ndata1 &lt;- as_tibble(data1)\ndata2 &lt;- as_tibble(data2)\n\ndata3 &lt;- data1 |&gt;\n  inner_join(data2, \n            by = c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(data1, data2, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWhen using inner_join the warning message “Detected an unexpected many-to-many relationship between x and y” appears. I am unsure if this need sto be addressed, as checking d3 against data3 shows that they have the same number of observations and variables. An error compared to the d3 data frame is that the varaibles nursery and internet appear to be out of order as they are stuck in the middle of the “x” variables.\nAn eaiser way to double check the data is to seperate the data out into two seperate tables by the x columns and the y columns\n\nx_check &lt;- data3 |&gt; \n  select(ends_with(\".x\"))\n\ny_check &lt;- data3 |&gt;\n  select(ends_with(\".y\"))\n\n#Also checking the varaibles we grouped by\nby_check &lt;- data3 |&gt;\n  select(!c(ends_with(\".x\"), ends_with(\".y\")))\n\nWe also need to check for NA values, so we are going to use the function seen in the EDA basics lecture\n\nsum_na &lt;- function(column){\n  sum(is.na(column))\n}\nna_counts &lt;- data3 |&gt;\n  summarise(across(everything(), sum_na)) #across() applies to every column while everything() is the specifier\nna_counts\n\n# A tibble: 1 × 53\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 42 more variables: guardian.x &lt;int&gt;, traveltime.x &lt;int&gt;, studytime.x &lt;int&gt;,\n#   failures.x &lt;int&gt;, schoolsup.x &lt;int&gt;, famsup.x &lt;int&gt;, paid.x &lt;int&gt;,\n#   activities.x &lt;int&gt;, nursery &lt;int&gt;, higher.x &lt;int&gt;, internet &lt;int&gt;,\n#   romantic.x &lt;int&gt;, famrel.x &lt;int&gt;, freetime.x &lt;int&gt;, goout.x &lt;int&gt;,\n#   Dalc.x &lt;int&gt;, Walc.x &lt;int&gt;, health.x &lt;int&gt;, absences.x &lt;int&gt;, G1.x &lt;int&gt;,\n#   G2.x &lt;int&gt;, G3.x &lt;int&gt;, guardian.y &lt;int&gt;, traveltime.y &lt;int&gt;,\n#   studytime.y &lt;int&gt;, failures.y &lt;int&gt;, schoolsup.y &lt;int&gt;, famsup.y &lt;int&gt;, …\n\n\nBased off these results everything also appears normal as no NA’s were found, but when double checking against the variable list on the ULC machine learning repository some are listed as binary variables. These variables like “sex” may need to be converted to factors. Of course there is the case of repeating variables but that is fixed in step 3\n\n\n\nThe next step we need to take is to do an inner_join() on all variables other than G1, G2, G3, paid, and absences.\n\ncombo_data &lt;- data1 |&gt;\n  inner_join(data2 |&gt; select(-G1, -G2, -G3, -paid, -absences))\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n\n\n\n\nTaking 4 categorical variables of for math data, Portuguese, and combined data and convert them into factors in each tibble. The four variables I want to look at our famsize, Pstatus, sex, and romantic. That way I can examine how family size, parents cohabitation status, romantic status, and gender impacts the data.\n\n#renaming datasets for clarity and making sure they are tibbles\nmath_data &lt;- data1\npor_data &lt;- data2\n\n#Using function to make variables into factors\nfactorizer &lt;- function(tibble_data){\n  valid_cat_vars &lt;- c(\"sex\", \"famsize\", \"Pstatus\", \"romantic\")\n  sex_lab &lt;- c(\"Female\", \"Male\")\n  famsize_lab &lt;- c(\"3_or_less\", \"3_plus\")\n  Pstatus_lab &lt;- c(\"Together\", \"Apart\")\n  romantic_lab &lt;- c(\"dating_yes\", \"dating_no\")\n  \n  for(var in colnames(tibble_data)){\n    if(var %in% valid_cat_vars){\n      tibble_data[[var]] &lt;- as.factor(tibble_data[[var]])\n    }\n  }\n  #Creating labels for each variable\n    if (\"sex\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        Sex_f = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")))\n  }\n  if (\"famsize\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        famsize_f = factor(famsize, labels = famsize_lab))\n  }\n  if (\"Pstatus\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        Pstatus_F = factor(Pstatus, labels = Pstatus_lab))\n  }\n  if (\"romantic\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        romantic_F = factor(romantic, labels = romantic_lab))\n  } \n  \n}\n#running function to make variables into factors\nmath_data &lt;- factorizer(math_data)\npor_data &lt;- factorizer(por_data) \ncombo_data &lt;- factorizer(combo_data)"
  },
  {
    "objectID": "HW5.html#task-1-read-in-data-and-modify",
    "href": "HW5.html#task-1-read-in-data-and-modify",
    "title": "HW5",
    "section": "",
    "text": "Reading in data using the provided R code with modifications\n\nd1=read.table(\"student/student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student/student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\n\n\n\nUsing functions from the tidyverse to repeat step 1 with tidyverse functions\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata1 = read.csv2(\"student/student-mat.csv\", header = TRUE)\ndata2 = read.csv2(\"student/student-por.csv\", header = TRUE)\n# turning data1 and data2 into tibbles\ndata1 &lt;- as_tibble(data1)\ndata2 &lt;- as_tibble(data2)\n\ndata3 &lt;- data1 |&gt;\n  inner_join(data2, \n            by = c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(data1, data2, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWhen using inner_join the warning message “Detected an unexpected many-to-many relationship between x and y” appears. I am unsure if this need sto be addressed, as checking d3 against data3 shows that they have the same number of observations and variables. An error compared to the d3 data frame is that the varaibles nursery and internet appear to be out of order as they are stuck in the middle of the “x” variables.\nAn eaiser way to double check the data is to seperate the data out into two seperate tables by the x columns and the y columns\n\nx_check &lt;- data3 |&gt; \n  select(ends_with(\".x\"))\n\ny_check &lt;- data3 |&gt;\n  select(ends_with(\".y\"))\n\n#Also checking the varaibles we grouped by\nby_check &lt;- data3 |&gt;\n  select(!c(ends_with(\".x\"), ends_with(\".y\")))\n\nWe also need to check for NA values, so we are going to use the function seen in the EDA basics lecture\n\nsum_na &lt;- function(column){\n  sum(is.na(column))\n}\nna_counts &lt;- data3 |&gt;\n  summarise(across(everything(), sum_na)) #across() applies to every column while everything() is the specifier\nna_counts\n\n# A tibble: 1 × 53\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 42 more variables: guardian.x &lt;int&gt;, traveltime.x &lt;int&gt;, studytime.x &lt;int&gt;,\n#   failures.x &lt;int&gt;, schoolsup.x &lt;int&gt;, famsup.x &lt;int&gt;, paid.x &lt;int&gt;,\n#   activities.x &lt;int&gt;, nursery &lt;int&gt;, higher.x &lt;int&gt;, internet &lt;int&gt;,\n#   romantic.x &lt;int&gt;, famrel.x &lt;int&gt;, freetime.x &lt;int&gt;, goout.x &lt;int&gt;,\n#   Dalc.x &lt;int&gt;, Walc.x &lt;int&gt;, health.x &lt;int&gt;, absences.x &lt;int&gt;, G1.x &lt;int&gt;,\n#   G2.x &lt;int&gt;, G3.x &lt;int&gt;, guardian.y &lt;int&gt;, traveltime.y &lt;int&gt;,\n#   studytime.y &lt;int&gt;, failures.y &lt;int&gt;, schoolsup.y &lt;int&gt;, famsup.y &lt;int&gt;, …\n\n\nBased off these results everything also appears normal as no NA’s were found, but when double checking against the variable list on the ULC machine learning repository some are listed as binary variables. These variables like “sex” may need to be converted to factors. Of course there is the case of repeating variables but that is fixed in step 3\n\n\n\nThe next step we need to take is to do an inner_join() on all variables other than G1, G2, G3, paid, and absences.\n\ncombo_data &lt;- data1 |&gt;\n  inner_join(data2 |&gt; select(-G1, -G2, -G3, -paid, -absences))\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n\n\n\n\nTaking 4 categorical variables of for math data, Portuguese, and combined data and convert them into factors in each tibble. The four variables I want to look at our famsize, Pstatus, sex, and romantic. That way I can examine how family size, parents cohabitation status, romantic status, and gender impacts the data.\n\n#renaming datasets for clarity and making sure they are tibbles\nmath_data &lt;- data1\npor_data &lt;- data2\n\n#Using function to make variables into factors\nfactorizer &lt;- function(tibble_data){\n  valid_cat_vars &lt;- c(\"sex\", \"famsize\", \"Pstatus\", \"romantic\")\n  sex_lab &lt;- c(\"Female\", \"Male\")\n  famsize_lab &lt;- c(\"3_or_less\", \"3_plus\")\n  Pstatus_lab &lt;- c(\"Together\", \"Apart\")\n  romantic_lab &lt;- c(\"dating_yes\", \"dating_no\")\n  \n  for(var in colnames(tibble_data)){\n    if(var %in% valid_cat_vars){\n      tibble_data[[var]] &lt;- as.factor(tibble_data[[var]])\n    }\n  }\n  #Creating labels for each variable\n    if (\"sex\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        Sex_f = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")))\n  }\n  if (\"famsize\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        famsize_f = factor(famsize, labels = famsize_lab))\n  }\n  if (\"Pstatus\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        Pstatus_F = factor(Pstatus, labels = Pstatus_lab))\n  }\n  if (\"romantic\" %in% colnames(tibble_data)) {\n    tibble_data &lt;- tibble_data |&gt;\n      mutate(\n        romantic_F = factor(romantic, labels = romantic_lab))\n  } \n  \n}\n#running function to make variables into factors\nmath_data &lt;- factorizer(math_data)\npor_data &lt;- factorizer(por_data) \ncombo_data &lt;- factorizer(combo_data)"
  },
  {
    "objectID": "HW5.html#task-2-summarize-the-data",
    "href": "HW5.html#task-2-summarize-the-data",
    "title": "HW5",
    "section": "Task 2: Summarize the Data",
    "text": "Task 2: Summarize the Data\nFirst step checking for how the data is stored in combo_data\n\n#selecting columns\nmath_cat &lt;- math_data |&gt;\n  select(Sex_f, famsize_f, Pstatus_F, romantic_F)\n\npor_cat &lt;- por_data |&gt;\n  select(Sex_f, famsize_f, Pstatus_F, romantic_F)\n\ncombo_cat &lt;- combo_data |&gt;\n  select(Sex_f, famsize_f, Pstatus_F, romantic_F)\n\n\n#Checking for missing values\ncombo_na &lt;- combo_cat |&gt;\n  summarise(across(everything(), sum_na)) \ncombo_na\n\n# A tibble: 1 × 4\n  Sex_f famsize_f Pstatus_F romantic_F\n  &lt;int&gt;     &lt;int&gt;     &lt;int&gt;      &lt;int&gt;\n1     0         0         0          0\n\n\nNo missing values were found nothing was NA\n\nCategorical Variables\n\nUsing table()\nCreating one-way, two-way, and three-way contingency tables using table()\n\n# one-way table\ntable1_combo_data &lt;- table(combo_data$Sex_f)\ntable1_combo_data\n\n\nFemale   Male \n   174    146 \n\n\nFemale: 174, which means roughly 54% of the students were female\n\n#two-way table\ntable2_combo_data &lt;- table(combo_data$Sex_f, combo_data$famsize_f)\ntable2_combo_data\n\n        \n         3_or_less 3_plus\n  Female       130     44\n  Male         100     46\n\n\nMale, 3_plus: 46, which means roughly 14% of the students were males who lived in a family with more than 3 members\n\n# three-way table\ntable3_combo_data &lt;- table(combo_data$Sex_f, combo_data$famsize_f, combo_data$Pstatus_F)\ntable3_combo_data[, , \"Together\"]\n\n        \n         3_or_less 3_plus\n  Female        12      6\n  Male           4      9\n\n\nTogether, Female, 3_or_less: 12, which means roughly 4% of the students female with parents who co-habituated and had 3 or less family members\n\n\nSub-setting tables\n\n# Using filter() to subset data\nschool_filter_data &lt;- combo_data |&gt;\n  filter(school == \"GP\")\n#creating two way table\nschool_filter_table &lt;- table(school_filter_data$romantic_F, school_filter_data$Sex_f)\nschool_filter_table\n\n            \n             Female Male\n  dating_yes    105   97\n  dating_no      48   37\n\n#Creating three way table then subsetting it by family size 3_plus\nsub_table &lt;- table(combo_data$romantic_F, combo_data$Sex_f, combo_data$famsize_f)\nsub_table_3_plus &lt;- sub_table[, , 2]\nsub_table_3_plus\n\n            \n             Female Male\n  dating_yes     28   33\n  dating_no      16   13\n\n\n\n\ndplyr tables\n\n# one-way table\ncount1_combo_data &lt;- combo_cat |&gt;\n  group_by(Sex_f) |&gt;\n  summarize(count = n())\ncount1_combo_data\n\n# A tibble: 2 × 2\n  Sex_f  count\n  &lt;fct&gt;  &lt;int&gt;\n1 Female   174\n2 Male     146\n\n\n\n#two-way table\ncount2_combo_data &lt;- combo_cat |&gt;\n  group_by(Sex_f, famsize_f) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = famsize_f, values_from = count)\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ncount2_combo_data\n\n# A tibble: 2 × 3\n# Groups:   Sex_f [2]\n  Sex_f  `3_or_less` `3_plus`\n  &lt;fct&gt;        &lt;int&gt;    &lt;int&gt;\n1 Female         130       44\n2 Male           100       46\n\n\ncount2_combo_data[2, 3]: 46, which means roughly 14% of the students were males who lived in a family with more than 3 members\n\n# Three-way table\ncount3_combo_data &lt;- combo_cat |&gt;\n  group_by(Sex_f, famsize_f, Pstatus_F) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = famsize_f, values_from = count)\n\n`summarise()` has grouped output by 'Sex_f', 'famsize_f'. You can override\nusing the `.groups` argument.\n\ncount3_combo_data\n\n# A tibble: 4 × 4\n# Groups:   Sex_f [2]\n  Sex_f  Pstatus_F `3_or_less` `3_plus`\n  &lt;fct&gt;  &lt;fct&gt;           &lt;int&gt;    &lt;int&gt;\n1 Female Together           12        6\n2 Female Apart             118       38\n3 Male   Together            4        9\n4 Male   Apart              96       37\n\n\ncount3_combo_data[1, 3]: 12, which means roughly 4% of the students female with parents who co-habituated and had 3 or less family members\n\n\nStacked bar graph and side-by-side bar graph\n\n#creating bar graph of sex by family size\ncombo_bar &lt;- ggplot(combo_data, aes(x = Sex_f, fill = famsize_f)) + \n  geom_bar() + \n    labs(title = \"Student sex by Family Size\", x = \"Sex\", y = \"Quantity of Students\")\ncombo_bar\n\n\n\n\n\n\n\n#Creating side-by-side plot\ncombo_plot &lt;- ggplot(combo_data, aes(x = Sex_f, fill = famsize_f)) + \n  geom_bar(position = \"dodge\") + \n    labs(title = \"Student sex by Family Size\", x = \"Sex\", y = \"Quantity of Students\")\ncombo_plot\n\n\n\n\n\n\n\n\n\n\n\nNumeric Variables (and across groups)\n\nCenter and spread of age, absences, grade variables\n\n#creating a function to summarize mean, median, variance, standard deviation, and IQR\nnumeric_summary &lt;- function(data, num_var = \"age\"){\n  data &lt;- data |&gt;\n  summarize(across(num_var, .fns = list(\"mean\" = mean, # This will create a named list with .fns\n                                       \"median\" = median,\n                                       \"var\" = var,\n                                       \"sd\" = sd,\n                                       \"IQR\" = IQR), .names = \"{.fn}\")) # .fn is function names\n}\n#Creating tibble of math data summary\nmath_age_summary &lt;- numeric_summary(math_data, \"age\")\n\nWarning: There was 1 warning in `summarize()`.\nℹ In argument: `across(...)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(num_var)\n\n  # Now:\n  data %&gt;% select(all_of(num_var))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nmath_abscenses_summary &lt;- numeric_summary(math_data, \"absences\")\nmath_G1_summary &lt;- numeric_summary(math_data, \"G1\")\nmath_G2_summary &lt;- numeric_summary(math_data, \"G2\")\nmath_G3_summary &lt;- numeric_summary(math_data, \"G3\")\n\nmath_summary &lt;- bind_rows(\"age\" = math_age_summary, \n                          \"abscenses\" = math_abscenses_summary, \n                          \"G1\" = math_G1_summary, \n                          \"G2\" = math_G2_summary, \n                          \"G3\" = math_G3_summary, \n                          .id = \"RowName\")\nmath_summary\n\n# A tibble: 5 × 6\n  RowName    mean median   var    sd   IQR\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 age       16.7      17  1.63  1.28     2\n2 abscenses  5.71      4 64.0   8.00     8\n3 G1        10.9      11 11.0   3.32     5\n4 G2        10.7      11 14.1   3.76     4\n5 G3        10.4      11 21.0   4.58     6\n\n#creating tibble of Portuguese data summary\npor_age_summary &lt;- numeric_summary(por_data, \"age\")\npor_abscenses_summary &lt;- numeric_summary(por_data, \"absences\")\npor_G1_summary &lt;- numeric_summary(por_data, \"G1\")\npor_G2_summary &lt;- numeric_summary(por_data, \"G2\")\npor_G3_summary &lt;- numeric_summary(por_data, \"G3\")\n\npor_summary &lt;- bind_rows(\"age\" = por_age_summary, \n                          \"abscenses\" = por_abscenses_summary, \n                          \"G1\" = por_G1_summary, \n                          \"G2\" = por_G2_summary, \n                          \"G3\" = por_G3_summary, \n                          .id = \"RowName\")\npor_summary \n\n# A tibble: 5 × 6\n  RowName    mean median   var    sd   IQR\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 age       16.7      17  1.48  1.22     2\n2 abscenses  3.66      2 21.5   4.64     6\n3 G1        11.4      11  7.54  2.75     3\n4 G2        11.6      11  8.49  2.91     3\n5 G3        11.9      12 10.4   3.23     4\n\n#Repeating this process while subsetting the data for all schools to only include MS school for the math data\nMS_only_data &lt;- math_data |&gt;\n  filter(school == \"MS\")\nMS_only_data\n\n# A tibble: 46 × 37\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;fct&gt; &lt;int&gt; &lt;chr&gt;   &lt;fct&gt;   &lt;fct&gt;   &lt;int&gt; &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 MS     M        18 R       GT3     T           3     2 other    other  course\n 2 MS     M        19 R       GT3     T           1     1 other    servi… home  \n 3 MS     M        17 U       GT3     T           3     3 health   other  course\n 4 MS     M        18 U       LE3     T           1     3 at_home  servi… course\n 5 MS     M        19 R       GT3     T           1     1 other    other  home  \n 6 MS     M        17 R       GT3     T           4     3 services other  home  \n 7 MS     F        18 U       GT3     T           3     3 services servi… course\n 8 MS     F        17 R       GT3     T           4     4 teacher  servi… other \n 9 MS     F        17 U       LE3     A           3     2 services other  reput…\n10 MS     M        18 U       LE3     T           1     1 other    servi… home  \n# ℹ 36 more rows\n# ℹ 26 more variables: guardian &lt;chr&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;fct&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences &lt;int&gt;, G1 &lt;int&gt;, G2 &lt;int&gt;, G3 &lt;int&gt;,\n#   Sex_f &lt;fct&gt;, famsize_f &lt;fct&gt;, Pstatus_F &lt;fct&gt;, romantic_F &lt;fct&gt;\n\n#Running data through numeric function\nMS_age_summary &lt;- numeric_summary(MS_only_data, \"age\")\nMS_abscenses_summary &lt;- numeric_summary(MS_only_data, \"absences\")\nMS_G1_summary &lt;- numeric_summary(MS_only_data, \"G1\")\nMS_G2_summary &lt;- numeric_summary(MS_only_data, \"G2\")\nMS_G3_summary &lt;- numeric_summary(MS_only_data, \"G3\")\n\n#combining rows to get tibble of all summary data\nMS_summary &lt;- bind_rows(\"age\" = MS_age_summary, \n                          \"abscenses\" = MS_abscenses_summary, \n                          \"G1\" = MS_G1_summary, \n                          \"G2\" = MS_G2_summary, \n                          \"G3\" = MS_G3_summary, \n                          .id = \"RowName\")\nMS_summary \n\n# A tibble: 5 × 6\n  RowName    mean median    var    sd   IQR\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 age       18.0    18    0.777 0.882  0.75\n2 abscenses  3.76    3   18.3   4.27   4.75\n3 G1        10.7    10.5 11.2   3.35   5   \n4 G2        10.2    10   11.4   3.38   4.75\n5 G3         9.85   10   18.0   4.24   4.75\n\n\nLooking at the data it appears that the mean scores from G1 to G3 decreased in the math group while they increased in the Portuguese group, while the median scores stayed roughly the same only changing to 12 for G3 in the Portuguese data. Ages between the two data sets were also similar having identical medians and near identical means (16.69 for math, 16.74 for Portuguese). One variable that did show a large degree of variance was absences with the math data having a much higher mean and median as well as a higher variance, sd, and IQR. In both groups the mean was higher than the median, this alongside with the high IQR (8 and 6 respectively) indicates that a small number of highly absent students may be skewing the data.\nWhen I filtered the data to only include the MS school in the math data, I found that the mean and median age was much higher at about 18 for the mean and median. Additionally, the mean and median test scores for G1 and G3 were lower than the overall math data mean and median scores.\n\n\nMeasures of center and spread when absences are less than 4\n\n#grouping data function\ngrouped_numeric_summary &lt;- function(data, num_var = \"age\"){\n  data &lt;- data |&gt;\n  filter(absences &lt; 4) |&gt;\n  summarize(across(num_var, .fns = list(\"mean\" = mean, # This will create a named list with .fns\n                                       \"median\" = median,\n                                       \"var\" = var,\n                                       \"sd\" = sd,\n                                       \"IQR\" = IQR), .names = \"{.fn}_{.col}\")) # .fn is function names\n}\n#summaries for math data\nsub_math_age &lt;- grouped_numeric_summary(math_data, \"age\")\nsub_math_age\n\n# A tibble: 1 × 5\n  mean_age median_age var_age sd_age IQR_age\n     &lt;dbl&gt;      &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1     16.5         16    1.59   1.26       2\n\nsub_math_abs &lt;- grouped_numeric_summary(math_data, \"absences\")\nsub_math_abs\n\n# A tibble: 1 × 5\n  mean_absences median_absences var_absences sd_absences IQR_absences\n          &lt;dbl&gt;           &lt;int&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1         0.822               0         1.08        1.04            2\n\nsub_math_G3 &lt;- grouped_numeric_summary(math_data, \"G3\")\nsub_math_G3\n\n# A tibble: 1 × 5\n  mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n    &lt;dbl&gt;     &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1    9.82        11   31.5  5.61      6\n\n#summaries for por data\nsub_por_age &lt;- grouped_numeric_summary(por_data, \"age\")\nsub_por_age\n\n# A tibble: 1 × 5\n  mean_age median_age var_age sd_age IQR_age\n     &lt;dbl&gt;      &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1     16.6         17    1.34   1.16       1\n\nsub_por_abs &lt;- grouped_numeric_summary(por_data, \"absences\")\nsub_por_abs\n\n# A tibble: 1 × 5\n  mean_absences median_absences var_absences sd_absences IQR_absences\n          &lt;dbl&gt;           &lt;int&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1         0.678               0        0.923       0.961            2\n\nsub_por_G3 &lt;- grouped_numeric_summary(por_data, \"G3\")\nsub_por_G3\n\n# A tibble: 1 × 5\n  mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n    &lt;dbl&gt;     &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1    12.1        12   13.2  3.64      4\n\n\nLooking at the data after sub-setting it interestingly shows you that when comparing the sub_math_G3 table to the math_G3_summary that when you filter out students who had more than 4 absences that the mean grades the less than 4 absences group has a lower mean than than when you include all students.\n\n#Mean for sub_math_G3\nsub_math_G3$mean_G3\n\n[1] 9.82199\n\n#Mean for math_G3_summary\nmath_G3_summary$mean\n\n[1] 10.41519\n\n\n\n\nFinding measures of center and spread across a single grouping variable\n\n#Finding measures of center and spread across SEX using new function\nsex_numeric_summary &lt;- function(data, num_var = \"age\"){\n  data |&gt;\n  group_by(sex) |&gt;\n  summarize(across(num_var, .fns = list(\"mean\" = mean, # This will create a named list with .fns\n                                       \"median\" = median,\n                                       \"var\" = var,\n                                       \"sd\" = sd,\n                                       \"IQR\" = IQR), .names = \"{.fn}_{.col}\")) # .fn is function names\n} \n#summaries for math data\nsex_math_age &lt;- sex_numeric_summary(math_data, \"age\")\nsex_math_age\n\n# A tibble: 2 × 6\n  sex   mean_age median_age var_age sd_age IQR_age\n  &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 F         16.7         17    1.44   1.20       2\n2 M         16.7         16    1.84   1.36       2\n\nsex_math_abs &lt;- sex_numeric_summary(math_data, \"absences\")\nsex_math_abs\n\n# A tibble: 2 × 6\n  sex   mean_absences median_absences var_absences sd_absences IQR_absences\n  &lt;fct&gt;         &lt;dbl&gt;           &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1 F              6.22               4         89.2        9.45            8\n2 M              5.14               4         35.8        5.98            8\n\nsex_math_G3 &lt;- sex_numeric_summary(math_data, \"G3\")\nsex_math_G3\n\n# A tibble: 2 × 6\n  sex   mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 F        9.97        10   21.4  4.62      5\n2 M       10.9         11   20.2  4.50      5\n\n#summaries for por data\nsex_por_age &lt;- sex_numeric_summary(por_data, \"age\")\nsex_por_age\n\n# A tibble: 2 × 6\n  sex   mean_age median_age var_age sd_age IQR_age\n  &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 F         16.8         17    1.38   1.18       2\n2 M         16.7         17    1.63   1.28       2\n\nsex_por_abs &lt;- sex_numeric_summary(por_data, \"absences\")\nsex_por_abs\n\n# A tibble: 2 × 6\n  sex   mean_absences median_absences var_absences sd_absences IQR_absences\n  &lt;fct&gt;         &lt;dbl&gt;           &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1 F              3.58               2         21.8        4.67            5\n2 M              3.78               2         21.2        4.61            6\n\nsex_por_G3 &lt;- sex_numeric_summary(por_data, \"G3\")\nsex_por_G3\n\n# A tibble: 2 × 6\n  sex   mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 F        12.3        12   9.76  3.12      4\n2 M        11.4        11  11.0   3.32      3\n\n\nNow we can see each summary statistic based off the female or male portion of the students, for instance the the mean ages between females and males for both the math_data and por_data are quite close (por: F = 16.78, M = 16.68) (math: F = 16.73, M = 16.65). We can also see that for mean absences the data is quite close for both math_data (F = 6.21, M = 5.14) and por_data (F = 3.55, M = 3.77). In the math_data it can be seen the the variance (F = 89.22, M = 35.76) and Standard deviation (F = 9.44, M = 5.98) are much higher for female students while the medians are the same for both sexes (4). For G3 scores it can be seen that the mean (F = 9.96, M = 10.91) and median scores (F = 10, M = 11) are higher for male students for the math_data and this trend is reversed in the por_data, means (F = 12.25, M = 11.4) and median (F = 12, M =11).\n\n\nFinding measures of spread across Sex and family size\n\n#Finding measures of center and spread across SEX and family size using new function\ndub_numeric_summary &lt;- function(data, num_var = \"age\"){\n  data |&gt;\n  group_by(Sex_f, famsize_f ) |&gt;\n  summarize(across(num_var, .fns = list(\"mean\" = mean, # This will create a named list with .fns\n                                       \"median\" = median,\n                                       \"var\" = var,\n                                       \"sd\" = sd,\n                                       \"IQR\" = IQR), .names = \"{.fn}_{.col}\")) # .fn is function names\n} \n#summaries for math data\ndub_math_age &lt;- dub_numeric_summary(math_data, \"age\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_math_age\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_age median_age var_age sd_age IQR_age\n  &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 Female 3_or_less     16.7         17    1.45   1.20       2\n2 Female 3_plus        16.8         17    1.46   1.21       2\n3 Male   3_or_less     16.6         16    2.00   1.41       3\n4 Male   3_plus        16.8         17    1.53   1.24       2\n\ndub_math_abs &lt;- dub_numeric_summary(math_data, \"absences\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_math_abs\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_absences median_absences var_absences sd_absences\n  &lt;fct&gt;  &lt;fct&gt;             &lt;dbl&gt;           &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;\n1 Female 3_or_less          6.10               4         91.1        9.54\n2 Female 3_plus             6.58               4         85.2        9.23\n3 Male   3_or_less          4.82               3         35.4        5.95\n4 Male   3_plus             5.81               4         36.5        6.04\n# ℹ 1 more variable: IQR_absences &lt;dbl&gt;\n\ndub_math_G3 &lt;- dub_numeric_summary(math_data, \"G3\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_math_G3\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n  &lt;fct&gt;  &lt;fct&gt;       &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 Female 3_or_less    9.63        10   22.5  4.74      5\n2 Female 3_plus      11.0         11   17.0  4.13      4\n3 Male   3_or_less   10.9         11   21.0  4.59      5\n4 Male   3_plus      11.0         11   18.8  4.34      5\n\n#summaries for por data\ndub_por_age &lt;- dub_numeric_summary(por_data, \"age\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_por_age\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_age median_age var_age sd_age IQR_age\n  &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 Female 3_or_less     16.8         17    1.37   1.17       2\n2 Female 3_plus        16.8         17    1.43   1.20       2\n3 Male   3_or_less     16.7         17    1.70   1.30       2\n4 Male   3_plus        16.7         17    1.52   1.23       2\n\ndub_por_abs &lt;- dub_numeric_summary(por_data, \"absences\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_por_abs\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_absences median_absences var_absences sd_absences\n  &lt;fct&gt;  &lt;fct&gt;             &lt;dbl&gt;           &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;\n1 Female 3_or_less          3.62               2         20.4        4.52\n2 Female 3_plus             3.46               2         25.9        5.09\n3 Male   3_or_less          3.69               2         19.9        4.46\n4 Male   3_plus             3.94               2         24.0        4.90\n# ℹ 1 more variable: IQR_absences &lt;dbl&gt;\n\ndub_por_G3 &lt;- dub_numeric_summary(por_data, \"G3\")\n\n`summarise()` has grouped output by 'Sex_f'. You can override using the\n`.groups` argument.\n\ndub_por_G3\n\n# A tibble: 4 × 7\n# Groups:   Sex_f [2]\n  Sex_f  famsize_f mean_G3 median_G3 var_G3 sd_G3 IQR_G3\n  &lt;fct&gt;  &lt;fct&gt;       &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 Female 3_or_less    12.2        12   9.99  3.16      4\n2 Female 3_plus       12.3        12   9.20  3.03      5\n3 Male   3_or_less    11.1        11  12.5   3.54      3\n4 Male   3_plus       12.0        12   7.84  2.80      4\n\n\nOne thing of interest I was able to find from this was that male students with a family size of 3 or less had the lowest mean G3 Portuguese scores by a large margin with the nearest mean G3 score being 11.96 for males with a family size greater than 3. The opposite trend is found when looking at mean G3 math scores, in this case female students with a family size of 3 or less had the lowest mean scores by over a point at 9.63.\n\n\nCreating a correlation between all numeric variables\n\n#Creating function to replicate process across datasets\ncorrelation_summary &lt;- function(data, cor_var = \"absences\"){\n  data &lt;- data |&gt;\n  select(age, absences, G1, G2, G3 ) |&gt;\n  summarize(across(where(is.numeric), .fns = list(\"correlation\" = ~cor(.x, data[[cor_var]])), \n                                                                  .names = \"{cor_var}_{.fn}_{col}\")) \n  return(as.matrix(data))\n}\n#Running function for each variable\ncor_age_math &lt;- correlation_summary(math_data)\ncor_abs_math &lt;- correlation_summary(math_data, \"age\")\ncor_G1_math &lt;- correlation_summary(math_data, \"G1\")\ncor_G2_math &lt;- correlation_summary(math_data, \"G2\")\ncor_G3_math &lt;- correlation_summary(math_data, \"G3\")\n\n#combining them into one matrix\ncor_math_matrix &lt;- rbind(cor_abs_math, cor_age_math, cor_G1_math, cor_G2_math, cor_G3_math)\n#renaming the rows so it makes sense\ncolnames(cor_math_matrix) &lt;- c(\"age\", \"absences\", \"G1\", \"G2\", \"G3\")\nrownames(cor_math_matrix) &lt;- c(\"age\", \"absences\", \"G1\", \"G2\", \"G3\")\ncor_math_matrix\n\n                age    absences         G1         G2          G3\nage       1.0000000  0.17523008 -0.0640815 -0.1434740 -0.16157944\nabsences  0.1752301  1.00000000 -0.0310029 -0.0317767  0.03424732\nG1       -0.0640815 -0.03100290  1.0000000  0.8521181  0.80146793\nG2       -0.1434740 -0.03177670  0.8521181  1.0000000  0.90486799\nG3       -0.1615794  0.03424732  0.8014679  0.9048680  1.00000000\n\n#Repeating for portugeuse data\ncor_age_por &lt;- correlation_summary(por_data)\ncor_abs_por &lt;- correlation_summary(por_data, \"age\")\ncor_G1_por &lt;- correlation_summary(por_data, \"G1\")\ncor_G2_por &lt;- correlation_summary(por_data, \"G2\")\ncor_G3_por &lt;- correlation_summary(por_data, \"G3\")\n\n#combining them into one matrix\ncor_por_matrix &lt;- rbind(cor_abs_por, cor_age_por, cor_G1_por, cor_G2_por, cor_G3_por)\n#renaming the rows so it makes sense\ncolnames(cor_por_matrix) &lt;- c(\"age\", \"absences\", \"G1\", \"G2\", \"G3\")\nrownames(cor_por_matrix) &lt;- c(\"age\", \"absences\", \"G1\", \"G2\", \"G3\")\ncor_por_matrix\n\n                age    absences         G1         G2          G3\nage       1.0000000  0.14999819 -0.1743222 -0.1071191 -0.10650539\nabsences  0.1499982  1.00000000 -0.1471492 -0.1247449 -0.09137906\nG1       -0.1743222 -0.14714924  1.0000000  0.8649816  0.82638712\nG2       -0.1071191 -0.12474493  0.8649816  1.0000000  0.91854800\nG3       -0.1065054 -0.09137906  0.8263871  0.9185480  1.00000000\n\n\nFrom this data we can find that age has a weak negative correlation with G1 to G3 test scores for both the math and Portuguese scores. Absences also have a weak negative correlation, but interestingly this is not true for G3 math scores with there being an almost non-existent positive correlation of 0.03.\n\n\nCreating a histogram, kernel density plot, and box plot for age & G3 grouped by dating status\nNote: I realized I probably was supposed to be doing this data for the combined data set, so I am going to do that from here on out. I would go back and change my code but all I would be doing is switching out the data sets, I got confused by the wording that said the numeric variables for math and Portuguese data on the instructions.\n\n#histogram for age by dating status\nromance_age_histo &lt;- ggplot(combo_data, aes(x = age, fill = romantic_F)) + \n  geom_histogram(binwidth = 1, alpha = 0.5, position = \"identity\") + \n  labs(title = \"Age by Dating Status Histogram\")\n\n#histogram for G3 by dating status\nromance_G3_histo &lt;- ggplot(combo_data, aes(x = G3, fill = romantic_F)) + \n  geom_histogram(binwidth = 1, alpha = 0.5, position = \"identity\") + \n  theme_light() +\n  labs(title = \"G3 by Dating Status Histogram\")\n\n#kernal plot for age by dating status\nromance_age_kernal &lt;- ggplot(combo_data, aes(x = age, fill = romantic_F)) + \n  geom_density(alpha = 0.5, position = \"fill\") + \n  labs(title = \"Age by Dating Status Kernal Density Plot\")\n\n#kernal plot for G3 by dating status\nromance_G3_kernal &lt;- ggplot(combo_data, aes(x = G3, fill = romantic_F)) + \n  geom_density(alpha = 0.5, position = \"fill\") + \n  theme_light() +\n  labs(title = \"G3 by Dating Status Kernal Density Plot\")\n\n#boxplot for age by dating status\nromance_age_box &lt;- ggplot(combo_data)  + \n  geom_boxplot(aes(x = romantic_F, y = age, fill = romantic_F)) + \n  labs(title = \"Age by Dating Status Box Plot\")\n\n#boxplot for G3 by dating status\nromance_G3_box &lt;- ggplot(combo_data) + \n  geom_boxplot(aes(x = romantic_F, y = G3, fill = romantic_F)) + \n  theme_light() +\n  labs(title = \"G3 by Dating Status Box Plot\")\n\n#printing plots \nromance_age_histo\n\n\n\n\n\n\n\nromance_G3_histo\n\n\n\n\n\n\n\nromance_age_kernal\n\n\n\n\n\n\n\nromance_G3_kernal\n\n\n\n\n\n\n\nromance_age_box\n\n\n\n\n\n\n\nromance_G3_box\n\n\n\n\n\n\n\n\nBased off the data we were able to find a couple things that stand out, the first one being that when looking at age by dating status histogram you can see that younger students were more likely to be dating than not dating, but as they got closer to the age of 18 this difference started to decrease.This is also backed up by the age by dating status box plot which shows that the mean age of non-daters is higher than the mean age for students who are dating.\n\n\nCreating scatter plots that compare G3 to another numerical variable grouped by sex\n\n#plotting G3 by age \ng3_age_scatter &lt;- ggplot(combo_data, aes(x = age, y = G3, color = Sex_f)) + \n  geom_point(position = \"jitter\") + \n  labs(title = \"Age by G3 Scatter Plot\", color = \"Sex\")\ng3_age_scatter\n\n\n\n\n\n\n\n#plotting G3 by absences\ng3_abs_scatter &lt;- ggplot(combo_data, aes(x = absences, y = G3, color = Sex_f)) + \n  geom_point(position = \"jitter\") + \n  labs(title = \"Absences by G3 Scatter Plot\", color = \"Sex\")\ng3_abs_scatter\n\n\n\n\n\n\n\n\n\n\nRepeating plots with faceting\n\n#plotting G3 by age with sex\ng3_age_face &lt;- g3_age_scatter + geom_point() +\n                facet_wrap(~ Sex_f)\ng3_age_face\n\n\n\n\n\n\n\n#plotting G3 by age with sex and dating status\ng3_age_face2 &lt;- g3_age_scatter + geom_point() +\n                geom_smooth(method = lm) + #adding for fun\n                facet_grid(romantic_F ~ Sex_f)\ng3_age_face2\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nEverything is now complete for our exploratory analysis. The final bit of interest was that when looking at the trend line for age by G3 grouped by sex and dating status, was that the male students who were dating showed the sharpest decrease in their trend line for test scores as age increased."
  }
]